const path = require('path');
const htmlWebpackPlugin = require('html-webpack-plugin');
const VueLoaderPlugin = require('vue-loader/lib/plugin')
const webpack = require('webpack');
console.log("paths",path.resolve(__dirname,"../src/icons"))
module.exports = {
    mode:"development",
    entry:{
        main:path.resolve(__dirname,'../src/main.js')
    },
    output:{
        path:path.join(__dirname,"../dist"),
        filename:'js/[name].[hash:8].js',
        chunkFilename:'js/[name].[hash:8].js',
        publicPath:'/dist'
    },
    devServer:{
        hot:true,
        port:3000,
        contentBase:'./dist'
    },
    resolve:{
        alias:{
            vue$:'vue/dist/vue.runtime.esm.js'
        },
        extensions:[
            '.js',
            '.vue'
        ]
    },
    module:{
        rules:[
            {
                test:/\.vue$/,
                use:[
                    {
                        loader:'cache-loader'
                    },
                    {
                        loader:"thread-loader"
                    },
                    {
                        loader:'vue-loader',
                        options:{
                            compilerOptions:{
                                preserveWhitespace:false
                            }
                        }
                    }
                ]
            },
            {
                test:/\.jsx?$/,
                exclude:/node_modules/,
                use:[
                    {
                        loader:'babel-loader'
                    }
                ]
            },
            {
                test:/\.(jpe?g|png|gif|svg)$/i,
                exclude:[
                    path.resolve(__dirname,"../src/icons")
                ],
                use:[
                    {
                        loader:'url-loader',
                        options:{
                            limit:4096,
                            fallback:{
                                loader:"file-loader",
                                options:{
                                    name:"img/[name].[hash:8].[ext]",
                                    esModule:false
                                }
                            }
                        }
                    }
                ]
            },
            {
                test:/\.svg$/,
                include:[
                    path.resolve(__dirname,"../src/icons")
                ],
                use:[
                    {
                        loader:'svg-sprite-loader',
                        options:{
                            symbolId:'icon-[name]'
                        }
                    }
                ]
            },
            {
                test:/\.(mp4|webm|ogg|mp3|wav|falc|acc)(\?.*)?$/,
                use:[
                    {
                        loader:'url-loader',
                        options:{
                            limit:4096,
                            fallback:{
                                loader:"file-loader",
                                options:{
                                    name:"media/[name].[hash:8].[ext]"
                                }
                            }
                        }
                    }
                ]
            },
            {
                test:/\.(woff2?|eot|ttf|otf)(\?.*)?$/i,
                use:[
                    {
                        loader:'url-loader',
                        options:{
                            limit:4096,
                            fallback:{
                                loader:"file-loader",
                                options:{
                                    name:"font/[name].[hash:8].[ext]"
                                }
                            }
                        }
                    }
                ]
            }
        ]
    },
    plugins:[
        new htmlWebpackPlugin({
            template:path.resolve(__dirname,"../public/index.html")
        }),
        new webpack.NamedModulesPlugin(),
        new webpack.HotModuleReplacementPlugin(),
        new VueLoaderPlugin()
    ]
}